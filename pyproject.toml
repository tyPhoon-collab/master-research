[project]
name = "master"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "torch==2.5.1+cu124; sys_platform == 'linux' and platform_machine == 'x86_64'",
    "torch==2.5.1; sys_platform == 'darwin' or (sys_platform == 'linux' and platform_machine == 'aarch64')",
    "torchvision==0.20.1+cu124; sys_platform == 'linux' and platform_machine == 'x86_64'",
    "torchvision==0.20.1; sys_platform == 'darwin' or (sys_platform == 'linux' and platform_machine == 'aarch64')",
    "torchaudio==2.5.1+cu124; sys_platform == 'linux' and platform_machine == 'x86_64'",
    "torchaudio==2.5.1; sys_platform == 'darwin' or (sys_platform == 'linux' and platform_machine == 'aarch64')",
    "llvmlite>=0.43.0",
    "librosa>=0.10.2.post1",
    "diffwave>=0.1.7",
    "ipykernel>=6.29.5",
    "matplotlib>=3.9.2",
    "plotly>=5.24.1",
    "notebook>=7.2.2",
    "ipywidgets>=8.1.5",
    "polars>=1.14.0",
    "pandas>=2.2.3",
    "onnx>=1.17.0",
    "onnxscript>=0.1.0.dev20241112",
    "diffusers>=0.31.0",
    "lightning>=2.4.0",
    "pytest>=8.3.4",
    "transformers>=4.47.0",
    "tokenizers>=0.21.0",
    "accelerate>=1.2.0",
    "hydra-core>=1.3.2",
    "neptune>=1.13.0",
    # [plotly - no kaleido source distribution or wheel for uv on current platform - Stack Overflow](https://stackoverflow.com/questions/79241839/no-kaleido-source-distribution-or-wheel-for-uv-on-current-platform)
    "kaleido==0.2.0",
    "schedulefree>=1.4",
    "rich>=13.9.4",
    "pydantic>=2.10.4",
    "einops>=0.8.0",
    "alias-free-torch>=0.0.6",
    "jupyter>=1.1.1",
]

[tool.uv.sources]
torch = { index = "torch-cuda", marker = "sys_platform == 'linux' and platform_machine == 'x86_64'" }

torchaudio = { index = "torch-cuda", marker = "sys_platform == 'linux' and platform_machine == 'x86_64'" }

torchvision = { index = "torch-cuda", marker = "sys_platform == 'linux' and platform_machine == 'x86_64'" }

[[tool.uv.index]]
name = "torch-cuda"
url = "https://download.pytorch.org/whl/cu124"
explicit = true

[tool.setuptools.packages.find]
where = ["src"]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"
